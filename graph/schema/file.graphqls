# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type File {
  id: ID!
  name: String!
  slug: String!
  filePath: String!
  fileType: String!
  fileBytes: Int!
  autoDownload: Boolean!
  folderId: Int!
  folder: Folder!
  createdAt: Int!
  updatedAt: Int!
  createdBy: String!
  updatedBy: String!
  groups(first: Int!, after: Int, filter: GroupFilter, sort: GroupSort): GroupConnection!
}

type MyFile {
  id: ID!
  name: String!
  slug: String!
  filePath: String!
  fileType: String!
  fileBytes: Int!
  autoDownload: Boolean!
  isNew: Boolean!
  folderId: Int!
  folder: Folder!
  createdAt: Int!
  updatedAt: Int!
}

input CreateFile {
  name: String!
  slug: String!
  filePath: String!
  folderId: ID!       # The folder to which the file belongs
}

input UpdateFile {
  id: ID!
  name: String!
  slug: String!
  filePath: String!
}

# Filters for Files
input FileFilter {
  name: String
  slug: String
}

# Sorting for Files
input FileSort {
  field: FileSortField!
  order: SortOrder!
}

enum FileSortField {
  NAME
  SLUG
}


type FileConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  pageInfo: PageInfo!
}

type FileEdge {
  cursor: String!
  node: File!
}

extend type Query {
  files(
    first: Int!
    after: Int
    filter: FileFilter
    sort: FileSort
  ): FileConnection!
  getFile(id: ID!): File!  # Get a single file by its ID
  getFilesByFolder(folderId: ID!): [File!]!  # Get files by folder ID
}

extend type Mutation {
  createFile(input: CreateFile!): File!
  updateFile(input: UpdateFile!): File!
  deleteFile(id: ID!): Boolean!
  deleteFiles(ids: [ID!]!): Boolean!
}
