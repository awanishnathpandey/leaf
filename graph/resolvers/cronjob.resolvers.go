package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"
	"fmt"

	"github.com/awanishnathpandey/leaf/graph"
	"github.com/awanishnathpandey/leaf/graph/model"
)

// CronJobLogs is the resolver for the cronJobLogs field.
func (r *cronJobResolver) CronJobLogs(ctx context.Context, obj *model.CronJob, first int64, after *int64, filter *model.CronJobLogFilter, sort *model.CronJobLogSort) (*model.CronJobLogConnection, error) {
	panic(fmt.Errorf("not implemented: CronJobLogs - cronJobLogs"))
}

// UpdateCronJob is the resolver for the UpdateCronJob field.
func (r *mutationResolver) UpdateCronJob(ctx context.Context, input model.UpdateCronJob) (*model.CronJob, error) {
	panic(fmt.Errorf("not implemented: UpdateCronJob - UpdateCronJob"))
}

// DeleteCronJobLog is the resolver for the deleteCronJobLog field.
func (r *mutationResolver) DeleteCronJobLog(ctx context.Context, id int64) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteCronJobLog - deleteCronJobLog"))
}

// DeleteCronJobLogs is the resolver for the deleteCronJobLogs field.
func (r *mutationResolver) DeleteCronJobLogs(ctx context.Context, ids []int64) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteCronJobLogs - deleteCronJobLogs"))
}

// CronJobs is the resolver for the cronJobs field.
func (r *queryResolver) CronJobs(ctx context.Context, first int64, after *int64, filter *model.CronJobFilter, sort *model.CronJobSort) (*model.CronJobConnection, error) {
	panic(fmt.Errorf("not implemented: CronJobs - cronJobs"))
}

// CronJobLogs is the resolver for the cronJobLogs field.
func (r *queryResolver) CronJobLogs(ctx context.Context, first int64, after *int64, filter *model.CronJobLogFilter, sort *model.CronJobLogSort) (*model.CronJobLogConnection, error) {
	panic(fmt.Errorf("not implemented: CronJobLogs - cronJobLogs"))
}

// GetCronJob is the resolver for the getCronJob field.
func (r *queryResolver) GetCronJob(ctx context.Context, slug string) (*model.CronJob, error) {
	panic(fmt.Errorf("not implemented: GetCronJob - getCronJob"))
}

// GetCronJobLog is the resolver for the getCronJobLog field.
func (r *queryResolver) GetCronJobLog(ctx context.Context, id int64) (*model.CronJobLog, error) {
	panic(fmt.Errorf("not implemented: GetCronJobLog - getCronJobLog"))
}

// CronJob returns graph.CronJobResolver implementation.
func (r *Resolver) CronJob() graph.CronJobResolver { return &cronJobResolver{r} }

type cronJobResolver struct{ *Resolver }
