package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"
	"fmt"

	"github.com/awanishnathpandey/leaf/graph/model"
	"github.com/awanishnathpandey/leaf/internal/utils"
)

// GetDashboardKPICount is the resolver for the getDashboardKPICount field.
func (r *queryResolver) GetDashboardKPICount(ctx context.Context) (*model.DashboardKPICount, error) {
	// Define the required permissions for this action
	requiredPermissions := []string{"all", "admin_access"}

	// Check if the user has the required permissions
	if err := utils.CheckUserPermissions(ctx, requiredPermissions, r.DB); err != nil {
		return nil, err
	}
	// Fetch the counts from the database
	counts, err := r.DB.GetDashboardKPICount(ctx)
	if err != nil {
		return nil, fmt.Errorf("failed to fetch dashboard KPI counts: %w", err)
	}

	// Return the counts
	return &model.DashboardKPICount{
		Users:       counts.Users,
		Roles:       counts.Roles,
		Permissions: counts.Permissions,
		Groups:      counts.Groups,
		Folders:     counts.Folders,
		Files:       counts.Files,
	}, nil
}
