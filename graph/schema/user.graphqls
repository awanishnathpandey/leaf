# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  emailVerifiedAt: Int
  lastSeenAt: Int!
  createdAt: Int!
  updatedAt: Int!
  deletedAt: Int
  groups(first: Int!, after: Int, filter: GroupFilter, sort: GroupSort): GroupConnection!
  roles(first: Int!, after: Int, filter: RoleFilter, sort: RoleSort): RoleConnection!
}

input CreateUser {
  name: String!
  email: String!
  password: String!
}

input UpdateUser {
  id: ID!
  name: String!
  email: String!
}

# Filters for Users
input UserFilter {
  name: String
  email: String
}

# Sorting for Users
input UserSort {
  field: UserSortField!
  order: SortOrder!
}

enum UserSortField {
  NAME
  EMAIL
}

enum SortOrder {
  ASC
  DESC
}

type UserConnection {
  totalCount: Int!
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

type UserEdge {
  cursor: String!
  node: User!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

extend type Query {
  users(
    first: Int!
    after: Int
    filter: UserFilter
    sort: UserSort
  ): UserConnection!
  getUser(id: ID!): User!
  getUserByEmail(email: String!): User!
}

extend type Mutation {
  createUser(input: CreateUser!): User!
  updateUser(input: UpdateUser!): User!
  deleteUser(id: ID!): Boolean!
  deleteUsers(ids: [ID!]!): Boolean!
  UpdateUserEmailVerifiedAt(id: ID!): Boolean!
}
