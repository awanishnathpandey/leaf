# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Group {
    id: ID!
    name: String!
    description: String!
    createdAt: Int!
    updatedAt: Int!
    users(first: Int!, after: Int, filter: UserFilter, sort: UserSort): UserConnection!
    folders(first: Int!, after: Int, filter: FolderFilter, sort: FolderSort): FolderConnection!
    files(first: Int!, after: Int, filter: FileFilter, sort: FileSort): FileConnection!
}

input CreateGroup {
  name: String!
  description: String!
}

input UpdateGroup {
  id: ID!
  name: String!
  description: String!
}


# Filters for Groups
input GroupFilter {
  name: String
  description: String
}

# Sorting for Groups
input GroupSort {
  field: GroupSortField!
  order: SortOrder!
}

enum GroupSortField {
  NAME
  DESCRIPTION
}

type GroupConnection {
  totalCount: Int!
  edges: [GroupEdge!]!
  pageInfo: PageInfo!
}

type GroupEdge {
  cursor: String!
  node: Group!
}

extend type Query {
  groups(
    first: Int!
    after: Int
    filter: GroupFilter
    sort: GroupSort
  ): GroupConnection!
  getGroup(id: ID!): Group!
}

extend type Mutation {
  createGroup(input: CreateGroup!): Group!
  updateGroup(input: UpdateGroup!): Group!
  deleteGroup(id: ID!): Boolean!
  deleteGroups(ids: [ID!]!): Boolean!
  addUserToGroup(groupId: ID!, userId: ID!): Boolean!
  removeUserFromGroup(groupId: ID!, userId: ID!): Boolean!
  addFolderToGroup(groupId: ID!, folderId: ID!): Boolean!
  removeFolderFromGroup(groupId: ID!, folderId: ID!): Boolean!
  addFileToGroup(groupId: ID!, fileId: ID!): Boolean!
  removeFileFromGroup(groupId: ID!, fileId: ID!): Boolean!
}
